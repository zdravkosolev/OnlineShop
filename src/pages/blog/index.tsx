import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import React, { useState } from "react";
import BlogItem from "../../components/BlogItem";
import PageTitle from "../../components/PageTitle";
import { useRouter } from "next/router";

export interface IBlogData {
  id: string;
  author: string;
  date: string;
  category: string;
  excerpt: string;
  img: string;
  title: string;
  first_content: string;
  second_content: string;
}
interface Props {
  dataBlogFilter: IBlogData[];
}
const Blog: NextPage<Props> = ({ dataBlogFilter }) => {
  const router = useRouter();
  const [blogSearchVal, setBlogSearchVal] = useState("");

  const blogFilterHandler = (e: any) => {
    let clickedFilter = e.target.value;
    router.push({
      query: { ...router.query, category: clickedFilter },
    });
    if (router.query.category === clickedFilter) {
      const { category, ...restQuery } = router.query;
      router.push({
        query: restQuery,
      });
    }
  };

  const blogSearchHandler = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();

    router.push({
      query: { ...router.query, q: blogSearchVal },
    });
    if (blogSearchVal.trim().length === 0) {
      const { q, ...restQuery } = router.query;
      router.push({
        query: restQuery,
      });
    }
  };

  return (
    <>
      <Head>
        <title>Store - Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <PageTitle title="Blog" />

      <section className="bg0 p-t-62 p-b-60">
        <div className="container">
          <div className="row">
            <div className="col-md-8 col-lg-9 p-b-80">
              <div className="p-r-45 p-r-0-lg">
                {dataBlogFilter.map((blog) => (
                  <BlogItem key={blog.id} {...blog} />
                ))}

                {dataBlogFilter.length === 0 && (
                  <p>There are no results with your search.</p>
                )}
              </div>
            </div>

            <div className="col-md-4 col-lg-3 p-b-80">
              <div className="side-menu">
                <form
                  className="bor17 of-hidden pos-relative"
                  onSubmit={blogSearchHandler}
                >
                  <input
                    className="stext-103 cl2 plh4 size-116 p-l-28 p-r-55"
                    type="text"
                    name="search"
                    placeholder="Search"
                    value={blogSearchVal}
                    onChange={(e) => {
                      setBlogSearchVal(e.target.value);
                    }}
                  />

                  <button className="flex-c-m size-122 ab-t-r fs-18 cl4 hov-cl1 trans-04">
                    <i className="zmdi zmdi-search"></i>
                  </button>
                </form>

                <div className="p-t-55">
                  <h4 className="mtext-112 cl2 p-b-33">Categories</h4>

                  <ul>
                    <li className="bor18">
                      <button
                        onClick={blogFilterHandler}
                        value={"fashion"}
                        className={`dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4 ${
                          router.query.category === "fashion"
                            ? "how-active1"
                            : ""
                        }`}
                      >
                        Fashion
                      </button>
                    </li>

                    <li className="bor18">
                      <button
                        onClick={blogFilterHandler}
                        value={"beauty"}
                        className={`dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4 ${
                          router.query.category === "beauty"
                            ? "how-active1"
                            : ""
                        }`}
                      >
                        Beauty
                      </button>
                    </li>

                    <li className="bor18">
                      <button
                        onClick={blogFilterHandler}
                        value={"streetstyle"}
                        className={`dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4 ${
                          router.query.category === "streetstyle"
                            ? "how-active1"
                            : ""
                        }`}
                      >
                        Street Style
                      </button>
                    </li>

                    <li className="bor18">
                      <button
                        onClick={blogFilterHandler}
                        value={"lifestyle"}
                        className={`dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4 ${
                          router.query.category === "lifestyle"
                            ? "how-active1"
                            : ""
                        }`}
                      >
                        Life Style
                      </button>
                    </li>

                    <li className="bor18">
                      <button
                        onClick={blogFilterHandler}
                        value={"diy"}
                        className={`dis-block stext-115 cl6 hov-cl1 trans-04 p-tb-8 p-lr-4 ${
                          router.query.category === "diy" ? "how-active1" : ""
                        }`}
                      >
                        DIY & Crafts
                      </button>
                    </li>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>
    </>
  );
};

export default Blog;
export const getServerSideProps: GetServerSideProps = async ({ query }) => {
  const q = query.q;
  const category = query.category;
  let link = "";
  if (category && q) {
    link = `http://localhost:5001/blogs?category_like=${category}&q=${q}`;
  } else if (category) {
    link = `http://localhost:5001/blogs?category_like=${category}`;
  } else if (q) {
    link = `http://localhost:5001/blogs?q=${q}`;
  } else {
    link = "http://localhost:5001/blogs";
  }

  const resBlogFilter = await fetch(link);
  const dataBlogFilter = await resBlogFilter.json();
  return {
    props: { dataBlogFilter },
  };
};
